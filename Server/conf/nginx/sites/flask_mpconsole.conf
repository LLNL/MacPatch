server {

	listen 80;
	server_name _;
	
	add_header X-Frame-Options "SAMEORIGIN";
	
	access_log		[SRVBASE]/logs/nginx_console_access.log;
	error_log		[SRVBASE]/logs/nginx_console_error.log;

	return          301 https://$host$request_uri;
}

server {

	listen 443;
	server_name _;
	
	add_header X-Frame-Options "SAMEORIGIN";

	access_log	[SRVBASE]/logs/nginx_console_access_ssl.log;
	error_log	[SRVBASE]/logs/nginx_console_error_ssl.log;

	ssl on;
	ssl_certificate 			[SRVBASE]/etc/ssl/server.crt;
	ssl_certificate_key			[SRVBASE]/etc/ssl/server.key;
	ssl_prefer_server_ciphers   on;
	
	ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
	ssl_ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS;

	# Max 10gig upload
	client_max_body_size 10G;

    location / {
		# checks for static files; if not found, proxy to app
		try_files $uri @proxy_to_app;
	}

	location /mp-content {
        alias [SRVCONTENT];
    }

    location @proxy_to_app {
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header Host $http_host;
		proxy_redirect off;
		proxy_buffering off;
		
		proxy_pass http://127.0.0.1:3602;
	}
}