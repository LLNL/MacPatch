"""0001 - MP 3.0.0 Base Schema

Revision ID: 8e25a122fa51
Revises: None
Create Date: 2016-07-11 14:38:58.898031

"""

# revision identifiers, used by Alembic.
revision = '100001'
down_revision = None

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

def upgrade():
	### commands auto generated by Alembic - please adjust! ###
	op.create_table('apple_patches',
	sa.Column('rid', sa.BigInteger(), nullable=False, autoincrement=True),
	sa.Column('akey', sa.String(length=50), nullable=False),
	sa.Column('description', sa.Text(), nullable=True),
	sa.Column('description64', mysql.LONGTEXT(), nullable=True),
	sa.Column('osver_support', sa.String(length=20), server_default='NA', nullable=False),
	sa.Column('patch_state', sa.String(length=10), server_default='Create', nullable=True),
	sa.Column('patchname', sa.String(length=255), server_default='NA', nullable=False),
	sa.Column('postdate', sa.DateTime(), server_default='1970-01-01 00:00:00', nullable=True),
	sa.Column('restartaction', sa.String(length=20), nullable=False),
	sa.Column('severity', sa.String(length=10), server_default='High', nullable=False),
	sa.Column('severity_int', sa.Integer(), server_default='3', nullable=True),
	sa.Column('supatchname', sa.String(length=255), nullable=False),
	sa.Column('title', sa.String(length=255), nullable=False),
	sa.Column('version', sa.String(length=20), nullable=False),
	sa.PrimaryKeyConstraint('rid')
	)
	op.create_index(op.f('ix_apple_patches_akey'), 'apple_patches', ['akey'], unique=False)
	op.create_index(op.f('ix_apple_patches_supatchname'), 'apple_patches', ['supatchname'], unique=False)
	op.create_index(op.f('ix_apple_patches_patchname'), 'apple_patches', ['patchname'], unique=False)
	op.create_table('apple_patches_mp_additions',
	sa.Column('rid', sa.BigInteger(), nullable=False, autoincrement=True),
	sa.Column('version', sa.String(length=20), nullable=False),
	sa.Column('supatchname', sa.String(length=100), nullable=True),
	sa.Column('severity', sa.String(length=10), server_default='High', nullable=False),
	sa.Column('severity_int', mysql.INTEGER(unsigned=True), server_default='3', nullable=True),
	sa.Column('patch_state', sa.String(length=100), server_default='Create', nullable=False),
	sa.Column('patch_install_weight', mysql.INTEGER(unsigned=True), server_default='60', nullable=True),
	sa.Column('patch_reboot', mysql.INTEGER(unsigned=True), server_default='0', nullable=True),
	sa.Column('osver_support', sa.String(length=10), server_default='NA', nullable=False),
	sa.PrimaryKeyConstraint('rid')
	)
	op.create_index(op.f('ix_apple_patches_mp_additions_supatchname'), 'apple_patches_mp_additions', ['supatchname'], unique=False)
	op.create_table('av_defs',
	sa.Column('rid', sa.BigInteger(), nullable=False, autoincrement=True),
	sa.Column('mdate', sa.DateTime(), server_default='1970-01-01 00:00:00', nullable=True),
	sa.Column('engine', sa.String(length=255), nullable=False),
	sa.Column('current', sa.String(length=3), nullable=False),
	sa.Column('defs_date', sa.DateTime(), server_default='1970-01-01 00:00:00', nullable=True),
	sa.Column('defs_date_str', sa.String(length=20), nullable=False),
	sa.Column('file', sa.Text(), nullable=False),
	sa.PrimaryKeyConstraint('rid')
	)
	op.create_table('av_info',
	sa.Column('rid', sa.BigInteger(), nullable=False, autoincrement=True),
	sa.Column('cuuid', sa.String(length=50), server_default='', nullable=False),
	sa.Column('mdate', sa.DateTime(), server_default='1970-01-01 00:00:00', nullable=True),
	sa.Column('av_type', sa.String(length=255), server_default='NA', nullable=True),
	sa.Column('app_name', sa.String(length=255), server_default='NA', nullable=True),
	sa.Column('app_path', sa.String(length=255), server_default='NA', nullable=True),
	sa.Column('app_version', sa.String(length=255), server_default='NA', nullable=True),
	sa.Column('eng_version', sa.String(length=255), server_default='NA', nullable=True),
	sa.Column('defs_date', sa.String(length=50), server_default='NA', nullable=True),
	sa.Column('last_scan', sa.DateTime(), server_default='1970-01-01 00:00:00', nullable=True),
	sa.PrimaryKeyConstraint('rid')
	)
	op.create_index(op.f('ix_av_info_cuuid'), 'av_info', ['cuuid'], unique=True)
	op.create_table('mp_adhoc_reports',
	sa.Column('rid', sa.BigInteger(), nullable=False, autoincrement=True),
	sa.Column('name', sa.String(length=255), nullable=False),
	sa.Column('reportData', mysql.MEDIUMTEXT(), nullable=True),
	sa.Column('owner', sa.String(length=255), nullable=False),
	sa.Column('rights', mysql.INTEGER(display_width=1, unsigned=True), server_default='0', nullable=True),
	sa.Column('disabled', mysql.INTEGER(display_width=1, unsigned=True), server_default='0', nullable=True),
	sa.Column('disabledDate', sa.DateTime(), server_default='1970-01-01 00:00:00', nullable=True),
	sa.PrimaryKeyConstraint('rid')
	)
	op.create_table('mp_adm_group_users',
	sa.Column('rid', sa.BigInteger(), nullable=False, autoincrement=True),
	sa.Column('group_id', sa.String(length=50), server_default='1', nullable=False),
	sa.Column('user_id', sa.String(length=255), nullable=False),
	sa.Column('user_type', mysql.INTEGER(display_width=1, unsigned=True), server_default='0', nullable=True),
	sa.Column('last_login', sa.DateTime(), server_default='1970-01-01 00:00:00', nullable=True),
	sa.Column('number_of_logins', mysql.INTEGER(), server_default='0', nullable=True),
	sa.Column('enabled', mysql.INTEGER(display_width=1, unsigned=True), server_default='0', nullable=True),
	sa.Column('authToken1', sa.String(length=50), nullable=True),
	sa.Column('authToken2', sa.String(length=50), nullable=True),
	sa.Column('user_email', sa.String(length=255), nullable=True),
	sa.Column('email_notification', mysql.INTEGER(display_width=1, unsigned=True), server_default='0', nullable=True),
	sa.PrimaryKeyConstraint('rid')
	)
	op.create_index(op.f('ix_mp_adm_group_users_user_id'), 'mp_adm_group_users', ['user_id'], unique=False)
	op.create_table('mp_adm_groups',
	sa.Column('rid', sa.BigInteger(), nullable=False, autoincrement=True),
	sa.Column('group_id', sa.String(length=255), nullable=False),
	sa.Column('group_name', sa.String(length=255), nullable=False),
	sa.Column('enabled', mysql.INTEGER(display_width=1, unsigned=True), server_default='1', nullable=True),
	sa.PrimaryKeyConstraint('rid')
	)
	op.create_index(op.f('ix_mp_adm_groups_group_id'), 'mp_adm_groups', ['group_id'], unique=False)
	op.create_table('mp_adm_users',
	sa.Column('rid', sa.BigInteger(), nullable=False, autoincrement=True),
	sa.Column('user_id', sa.String(length=255), nullable=False),
	sa.Column('user_pass', sa.String(length=255), nullable=False),
	sa.Column('user_RealName', sa.String(length=255), nullable=True),
	sa.Column('enabled', mysql.INTEGER(display_width=1, unsigned=True), server_default='1', nullable=True),
	sa.PrimaryKeyConstraint('rid')
	)
	op.create_index(op.f('ix_mp_adm_users_user_id'), 'mp_adm_users', ['user_id'], unique=False)
	op.create_table('mp_adm_users_info',
	sa.Column('rid', sa.BigInteger(), nullable=False, autoincrement=True),
	sa.Column('user_id', sa.String(length=255), nullable=False),
	sa.Column('user_type', mysql.INTEGER(1, unsigned=True), server_default='0'),
	sa.Column('last_login', sa.DateTime, server_default='1970-01-01 00:00:00'),
	sa.Column('number_of_logins', mysql.INTEGER(1, unsigned=True), server_default='0'),
	sa.Column('enabled', mysql.INTEGER(1, unsigned=True), server_default='0'),
	sa.Column('user_email', sa.String(length=255)),
	sa.Column('email_notification', mysql.INTEGER(1, unsigned=True), server_default='0'),
	sa.Column('admin', mysql.INTEGER(1, unsigned=True), server_default='0'),
	sa.Column('autopkg', mysql.INTEGER(1, unsigned=True), server_default='0'),
	sa.Column('agentUpload', mysql.INTEGER(1, unsigned=True), server_default='0'),
	sa.Column('apiAccess', mysql.INTEGER(1, unsigned=True), server_default='0'),
	sa.PrimaryKeyConstraint('rid')
	)
	op.create_index(op.f('ix_mp_adm_users_info_user_id'), 'mp_adm_users_info', ['user_id'], unique=False)
	op.create_table('mp_agent_config',
	sa.Column('rid', sa.BigInteger(), nullable=False, autoincrement=True),
	sa.Column('aid', sa.String(length=50), nullable=False),
	sa.Column('name', sa.String(length=255), nullable=False),
	sa.Column('isDefault', mysql.INTEGER(display_width=1, unsigned=True), nullable=True),
	sa.Column('revision', sa.String(length=50), nullable=True),
	sa.PrimaryKeyConstraint('rid')
	)
	op.create_index(op.f('ix_mp_agent_config_aid'), 'mp_agent_config', ['aid'], unique=False)
	op.create_table('mp_agent_config_data',
	sa.Column('rid', sa.BigInteger(), nullable=False, autoincrement=True),
	sa.Column('aid', sa.String(length=50), nullable=False),
	sa.Column('akey', sa.String(length=255), nullable=False),
	sa.Column('akeyValue', sa.String(length=255), nullable=False),
	sa.Column('enforced', mysql.INTEGER(display_width=1, unsigned=True), server_default='0', nullable=False),
	sa.PrimaryKeyConstraint('rid')
	)
	op.create_index(op.f('ix_mp_agent_config_data_aid'), 'mp_agent_config_data', ['aid'], unique=False)
	op.create_table('mp_agent_plugins',
	sa.Column('rid', sa.BigInteger(), nullable=False, autoincrement=True),
	sa.Column('pluginName', sa.String(length=255), nullable=False),
	sa.Column('pluginBundleID', sa.String(length=100), nullable=False),
	sa.Column('pluginVersion', sa.String(length=20), nullable=False),
	sa.Column('hash', sa.String(length=100), nullable=False),
	sa.Column('active', sa.Integer(), server_default='0', nullable=True),
	sa.PrimaryKeyConstraint('rid')
	)
	op.create_table('mp_agent_registration',
	sa.Column('rid', sa.BigInteger(), nullable=False, autoincrement=True),
	sa.Column('cuuid', sa.String(length=50), nullable=False),
	sa.Column('enabled', sa.Integer(), server_default='0', nullable=True),
	sa.Column('clientKey', sa.String(length=100), server_default='NA', nullable=True),
	sa.Column('pubKeyPem', mysql.MEDIUMTEXT(), nullable=True),
	sa.Column('pubKeyPemHash', mysql.MEDIUMTEXT(), nullable=True),
	sa.Column('hostname', sa.String(length=255), nullable=False),
	sa.Column('serialno', sa.String(length=255), nullable=False),
	sa.Column('reg_date', sa.DateTime(), server_default='1970-01-01 00:00:00', nullable=False),
	sa.PrimaryKeyConstraint('rid')
	)
	op.create_index(op.f('ix_mp_agent_registration_cuuid'), 'mp_agent_registration', ['cuuid'], unique=False)
	op.create_table('mp_apple_patch_criteria',
	sa.Column('rid', sa.BigInteger(), nullable=False, autoincrement=True),
	sa.Column('puuid', sa.String(length=50), server_default='1', nullable=False),
	sa.Column('supatchname', sa.String(length=255), nullable=True),
	sa.Column('type', sa.String(length=25), nullable=True),
	sa.Column('type_data', mysql.MEDIUMTEXT(), nullable=True),
	sa.Column('type_action', mysql.INTEGER(display_width=1, unsigned=True), server_default='0', nullable=True),
	sa.Column('type_order', mysql.INTEGER(display_width=2, unsigned=True), server_default='0', nullable=True),
	sa.Column('cdate', sa.DateTime(), server_default='1970-01-01 00:00:00', nullable=True),
	sa.Column('mdate', sa.DateTime(), server_default='1970-01-01 00:00:00', nullable=True),
	sa.PrimaryKeyConstraint('rid')
	)
	op.create_index(op.f('ix_mp_apple_patch_criteria_puuid'), 'mp_apple_patch_criteria', ['puuid'], unique=False)
	op.create_index(op.f('ix_mp_apple_patch_criteria_supatchname'), 'mp_apple_patch_criteria', ['supatchname'], unique=False)
	op.create_table('mp_asus_catalog_list',
	sa.Column('rid', sa.BigInteger(), nullable=False, autoincrement=True),
	sa.Column('listid', sa.Integer(), nullable=False),
	sa.Column('name', sa.String(length=255), nullable=False),
	sa.Column('version', sa.Integer(), nullable=False),
	sa.PrimaryKeyConstraint('rid')
	)
	op.create_table('mp_asus_catalogs',
	sa.Column('rid', sa.BigInteger(), nullable=False, autoincrement=True),
	sa.Column('listid', sa.Integer(), server_default='1', nullable=False),
	sa.Column('catalog_url', sa.String(length=255), nullable=False),
	sa.Column('os_minor', sa.Integer(), nullable=False),
	sa.Column('os_major', sa.Integer(), nullable=False),
	sa.Column('c_order', sa.Integer(), nullable=True),
	sa.Column('proxy', sa.Integer(), server_default='0', nullable=False),
	sa.Column('active', sa.Integer(), server_default='0', nullable=False),
	sa.Column('catalog_group_name', sa.String(length=255), nullable=False),
	sa.PrimaryKeyConstraint('rid')
	)
	op.create_table('mp_client_agents',
	sa.Column('rid', sa.BigInteger(), nullable=False, autoincrement=True),
	sa.Column('puuid', sa.String(length=50), nullable=False),
	sa.Column('type', sa.String(length=10), nullable=False),
	sa.Column('osver', sa.String(length=255), server_default='*', nullable=False),
	sa.Column('agent_ver', sa.String(length=10), nullable=False),
	sa.Column('version', sa.String(length=10), nullable=True),
	sa.Column('build', sa.String(length=10), nullable=True),
	sa.Column('pkg_name', sa.String(length=100), nullable=False),
	sa.Column('pkg_url', sa.String(length=255), nullable=True),
	sa.Column('pkg_hash', sa.String(length=50), nullable=True),
	sa.Column('active', sa.Integer(), server_default='0', nullable=False),
	sa.Column('state', sa.Integer(), server_default='0', nullable=False),
	sa.Column('cdate', sa.DateTime(), server_default='1970-01-01 00:00:00', nullable=True),
	sa.Column('mdate', sa.DateTime(), server_default='1970-01-01 00:00:00', nullable=True),
	sa.PrimaryKeyConstraint('rid')
	)
	op.create_index(op.f('ix_mp_client_agents_puuid'), 'mp_client_agents', ['puuid'], unique=False)
	op.create_table('mp_client_agents_filters',
	sa.Column('rid', sa.BigInteger(), nullable=False, autoincrement=True),
	sa.Column('type', sa.String(length=255), nullable=False),
	sa.Column('attribute', sa.String(length=255), nullable=False),
	sa.Column('attribute_oper', sa.String(length=10), nullable=False),
	sa.Column('attribute_filter', sa.String(length=255), nullable=False),
	sa.Column('attribute_condition', sa.String(length=10), nullable=False),
	sa.PrimaryKeyConstraint('rid')
	)
	op.create_table('mp_client_group_admin',
	sa.Column('rid', sa.BigInteger(), nullable=False, autoincrement=True),
	sa.Column('group_id', sa.String(length=50), nullable=False),
	sa.Column('group_admin', sa.String(length=255), nullable=False),
	sa.PrimaryKeyConstraint('rid')
	)
	op.create_index(op.f('ix_mp_client_group_admin_group_admin'), 'mp_client_group_admin', ['group_admin'], unique=True)
	op.create_index(op.f('ix_mp_client_group_admin_group_id'), 'mp_client_group_admin', ['group_id'], unique=True)
	op.create_table('mp_client_group_members',
	sa.Column('rid', sa.BigInteger(), nullable=False, autoincrement=True),
	sa.Column('group_id', sa.String(length=50), nullable=False),
	sa.Column('cuuid', sa.String(length=255), nullable=False),
	sa.PrimaryKeyConstraint('rid')
	)
	op.create_index(op.f('ix_mp_client_group_members_cuuid'), 'mp_client_group_members', ['cuuid'], unique=True)
	op.create_index(op.f('ix_mp_client_group_members_group_id'), 'mp_client_group_members', ['group_id'], unique=False)
	op.create_table('mp_client_groups',
	sa.Column('rid', sa.BigInteger(), nullable=False, autoincrement=True),
	sa.Column('group_id', sa.String(length=50), nullable=False),
	sa.Column('group_name', sa.String(length=255), nullable=False),
	sa.Column('group_owner', sa.String(length=255), server_default='NA', nullable=True),
	sa.PrimaryKeyConstraint('rid')
	)
	op.create_index(op.f('ix_mp_client_groups_group_id'), 'mp_client_groups', ['group_id'], unique=True)
	op.create_index(op.f('ix_mp_client_groups_group_name'), 'mp_client_groups', ['group_name'], unique=True)
	op.create_index(op.f('ix_mp_client_groups_group_owner'), 'mp_client_groups', ['group_owner'], unique=False)
	op.create_table('mp_client_reg_keys',
	sa.Column('rid', sa.BigInteger(), nullable=False, autoincrement=True),
	sa.Column('cuuid', sa.String(length=50), nullable=False),
	sa.Column('regKey', sa.String(length=255), nullable=False),
	sa.Column('active', sa.Integer(), server_default='1', nullable=True),
	sa.Column('reg_date', sa.DateTime(), server_default='1970-01-01 00:00:00', nullable=True),
	sa.PrimaryKeyConstraint('rid'),
	sa.UniqueConstraint('cuuid')
	)
	op.create_index(op.f('ix_mp_client_reg_keys_cuuid'), 'mp_client_reg_keys', ['cuuid'], unique=True)
	op.create_table('mp_client_settings',
	sa.Column('rid', sa.BigInteger(), nullable=False, autoincrement=True),
	sa.Column('group_id', sa.String(length=50), nullable=False),
	sa.Column('key', sa.String(length=255), nullable=False),
	sa.Column('value', sa.String(length=255), nullable=False),
	sa.PrimaryKeyConstraint('rid')
	)
	op.create_index(op.f('ix_mp_client_settings_group_id'), 'mp_client_settings', ['group_id'], unique=False)
	op.create_index(op.f('ix_mp_client_settings_key'), 'mp_client_settings', ['key'], unique=False)
	op.create_table('mp_client_tasks',
	sa.Column('rid', sa.BigInteger(), nullable=False, autoincrement=True),
	sa.Column('group_id', sa.String(length=50), nullable=False),
	sa.Column('id', mysql.INTEGER(display_width=4, unsigned=True), nullable=True),
	sa.Column('name', sa.String(length=255), nullable=False),
	sa.Column('cmd', sa.String(length=255), nullable=False),
	sa.Column('description', sa.String(length=255), nullable=False),
	sa.Column('active', sa.String(length=255), server_default='1', nullable=False),
	sa.Column('startdate', sa.String(length=255), server_default='2016-01-01', nullable=False),
	sa.Column('enddate', sa.String(length=255), server_default='2050-01-01', nullable=False),
	sa.Column('interval', sa.String(length=255), nullable=False),
	sa.Column('idrev', sa.String(length=255), server_default='1', nullable=False),
	sa.Column('parent', sa.String(length=255), server_default='0', nullable=False),
	sa.Column('scope', sa.String(length=255), server_default='Global', nullable=False),
	sa.Column('cmdalt', sa.String(length=255), server_default='0', nullable=False),
	sa.Column('mode', sa.String(length=255), server_default='0', nullable=False),
	sa.Column('idsig', sa.String(length=255), server_default='0', nullable=False),
	sa.PrimaryKeyConstraint('rid')
	)
	op.create_index(op.f('ix_mp_client_tasks_group_id'), 'mp_client_tasks', ['group_id'], unique=False)
	op.create_table('mp_clients',
	sa.Column('rid', sa.BigInteger(), nullable=False, autoincrement=True),
	sa.Column('cuuid', sa.String(length=50), nullable=False),
	sa.Column('serialno', sa.String(length=100), server_default='NA', nullable=True),
	sa.Column('hostname', sa.String(length=255), server_default='NA', nullable=True),
	sa.Column('computername', sa.String(length=255), server_default='NA', nullable=True),
	sa.Column('ipaddr', sa.String(length=64), server_default='NA', nullable=True),
	sa.Column('macaddr', sa.String(length=64), server_default='NA', nullable=True),
	sa.Column('osver', sa.String(length=255), server_default='NA', nullable=True),
	sa.Column('ostype', sa.String(length=255), server_default='NA', nullable=True),
	sa.Column('consoleuser', sa.String(length=255), server_default='NA', nullable=True),
	sa.Column('needsreboot', sa.String(length=255), server_default='NA', nullable=True),
	sa.Column('agent_version', sa.String(length=20), server_default='NA', nullable=True),
	sa.Column('agent_build', sa.String(length=10), server_default='0', nullable=True),
	sa.Column('client_version', sa.String(length=20), server_default='NA', nullable=True),
	sa.Column('mdate', sa.DateTime(), server_default='1970-01-01 00:00:00', nullable=True),
	sa.PrimaryKeyConstraint('rid')
	)
	op.create_index(op.f('ix_mp_clients_computername'), 'mp_clients', ['computername'], unique=False)
	op.create_index(op.f('ix_mp_clients_cuuid'), 'mp_clients', ['cuuid'], unique=True)
	op.create_index(op.f('ix_mp_clients_hostname'), 'mp_clients', ['hostname'], unique=False)
	op.create_index(op.f('ix_mp_clients_ipaddr'), 'mp_clients', ['ipaddr'], unique=False)
	op.create_table('mp_clients_plist',
	sa.Column('rid', sa.BigInteger(), nullable=False, autoincrement=True),
	sa.Column('cuuid', sa.String(length=50), server_default='', nullable=False),
	sa.Column('mdate', sa.DateTime(), server_default='1970-01-01 00:00:00', nullable=True),
	sa.Column('EnableASUS', sa.String(length=255), server_default='NA', nullable=True),
	sa.Column('MPDLTimeout', sa.String(length=255), server_default='NA', nullable=True),
	sa.Column('AllowClient', sa.String(length=255), server_default='NA', nullable=True),
	sa.Column('MPServerSSL', sa.String(length=255), server_default='NA', nullable=True),
	sa.Column('Domain', sa.String(length=255), server_default='NA', nullable=True),
	sa.Column('Name', sa.String(length=255), server_default='NA', nullable=True),
	sa.Column('MPInstallTimeout', sa.String(length=255), server_default='NA', nullable=True),
	sa.Column('MPServerDLLimit', sa.String(length=255), server_default='NA', nullable=True),
	sa.Column('PatchGroup', sa.String(length=255), server_default='NA', nullable=True),
	sa.Column('MPProxyEnabled', sa.String(length=255), server_default='NA', nullable=True),
	sa.Column('Description', sa.String(length=255), server_default='NA', nullable=True),
	sa.Column('MPDLConTimeout', sa.String(length=255), server_default='NA', nullable=True),
	sa.Column('MPProxyServerPort', sa.String(length=255), server_default='NA', nullable=True),
	sa.Column('MPProxyServerAddress', sa.String(length=255), server_default='NA', nullable=True),
	sa.Column('AllowServer', sa.String(length=255), server_default='NA', nullable=True),
	sa.Column('MPServerAddress', sa.String(length=255), server_default='NA', nullable=True),
	sa.Column('MPServerPort', sa.String(length=255), server_default='NA', nullable=True),
	sa.Column('MPServerTimeout', sa.String(length=255), server_default='NA', nullable=True),
	sa.Column('Reboot', sa.String(length=255), server_default='NA', nullable=True),
	sa.Column('DialogText', sa.String(length=255), server_default='NA', nullable=True),
	sa.Column('PatchState', sa.String(length=255), server_default='NA', nullable=True),
	sa.Column('ClientScanInterval', sa.String(length=255), server_default='NA', nullable=True),
	sa.Column('MPAgentExecDebug', sa.String(length=255), server_default='NA', nullable=True),
	sa.Column('MPAgentDebug', sa.String(length=255), server_default='NA', nullable=True),
	sa.Column('SWDistGroup', sa.String(length=255), server_default='NA', nullable=True),
	sa.Column('CheckSignature', sa.String(length=255), server_default='NA', nullable=True),
	sa.Column('SWDistGroupState', sa.String(length=255), server_default='NA', nullable=True),
	sa.ForeignKeyConstraint(['cuuid'], ['mp_clients.cuuid'], onupdate='NO ACTION', ondelete='CASCADE'),
	sa.PrimaryKeyConstraint('rid')
	)
	op.create_index(op.f('ix_mp_clients_plist_Domain'), 'mp_clients_plist', ['Domain'], unique=False)
	op.create_index(op.f('ix_mp_clients_plist_PatchGroup'), 'mp_clients_plist', ['PatchGroup'], unique=False)
	op.create_index(op.f('ix_mp_clients_plist_cuuid'), 'mp_clients_plist', ['cuuid'], unique=True)
	op.create_table('mp_clients_reg_conf',
	sa.Column('rid', sa.Integer(), nullable=False, autoincrement=True),
	sa.Column('autoreg', sa.Integer(), server_default='0', nullable=True),
	sa.Column('autoreg_key', sa.Integer(), server_default='999999', nullable=True),
	sa.Column('client_parking', sa.Integer(), server_default='0', nullable=True),
	sa.PrimaryKeyConstraint('rid')
	)
	op.create_table('mp_clients_wait_reg',
	sa.Column('rid', sa.BigInteger(), nullable=False, autoincrement=True),
	sa.Column('cuuid', sa.String(length=50), nullable=False),
	sa.Column('hostname', sa.String(length=255), nullable=False),
	sa.Column('req_date', sa.DateTime(), nullable=True),
	sa.PrimaryKeyConstraint('rid'),
	sa.UniqueConstraint('cuuid')
	)
	op.create_table('mp_client_patches',
	sa.Column('rid', sa.BigInteger(), nullable=False, autoincrement=True),
	sa.Column('cuuid', sa.String(length=50), nullable=False),
	sa.Column('mdate', sa.DateTime(), server_default='1970-01-01 00:00:00', nullable=False),
	sa.Column('type', sa.String(length=10), nullable=False),
	sa.Column('type_int', mysql.INTEGER(unsigned=True), nullable=False),
	sa.Column('patch', sa.String(length=255), nullable=False),
	sa.Column('patch_id', sa.String(length=255), nullable=True),
	sa.Column('bundle_id', sa.String(length=255), nullable=True),
	sa.Column('version', sa.String(length=255), nullable=False),
	sa.Column('description', sa.Text(), nullable=True),
	sa.Column('restart', sa.String(length=255), nullable=False),
	sa.ForeignKeyConstraint(['cuuid'], ['mp_clients.cuuid'], onupdate='NO ACTION', ondelete='CASCADE'),
	sa.PrimaryKeyConstraint('rid')
	)
	op.create_index(op.f('ix_mp_client_patches_cuuid'), 'mp_client_patches', ['cuuid'], unique=False)
	op.create_index(op.f('ix_mp_client_patches_type'), 'mp_client_patches', ['type'], unique=False)
	op.create_index(op.f('ix_mp_client_patches_patch'), 'mp_client_patches', ['patch'], unique=False)
	op.create_table('mp_client_patches_apple',
	sa.Column('rid', sa.BigInteger(), nullable=False, autoincrement=True),
	sa.Column('cuuid', sa.String(length=50), nullable=False),
	sa.Column('mdate', sa.DateTime(), server_default='1970-01-01 00:00:00', nullable=True),
	sa.Column('patch', sa.String(length=255), nullable=False),
	sa.Column('type', sa.String(length=255), nullable=False),
	sa.Column('description', sa.String(length=255), nullable=False),
	sa.Column('size', sa.String(length=255), nullable=False),
	sa.Column('recommended', sa.String(length=255), nullable=False),
	sa.Column('restart', sa.String(length=255), nullable=False),
	sa.Column('version', sa.String(length=255), nullable=True),
	sa.ForeignKeyConstraint(['cuuid'], ['mp_clients.cuuid'], onupdate='NO ACTION', ondelete='CASCADE'),
	sa.PrimaryKeyConstraint('rid')
	)
	op.create_index(op.f('ix_mp_client_patches_apple_cuuid'), 'mp_client_patches_apple', ['cuuid'], unique=False)
	op.create_index(op.f('ix_mp_client_patches_apple_patch'), 'mp_client_patches_apple', ['patch'], unique=False)
	op.create_table('mp_client_patches_third',
	sa.Column('rid', sa.BigInteger(), nullable=False, autoincrement=True),
	sa.Column('cuuid', sa.String(length=50), nullable=False),
	sa.Column('mdate', sa.DateTime(), server_default='1970-01-01 00:00:00', nullable=True),
	sa.Column('patch', sa.String(length=255), nullable=False),
	sa.Column('type', sa.String(length=255), nullable=False),
	sa.Column('description', sa.String(length=255), nullable=False),
	sa.Column('size', sa.String(length=255), nullable=False),
	sa.Column('recommended', sa.String(length=255), nullable=False),
	sa.Column('restart', sa.String(length=255), nullable=False),
	sa.Column('patch_id', sa.String(length=255), nullable=False),
	sa.Column('version', sa.String(length=255), nullable=True),
	sa.Column('bundleID', sa.String(length=255), nullable=True),
	sa.ForeignKeyConstraint(['cuuid'], ['mp_clients.cuuid'], onupdate='NO ACTION', ondelete='CASCADE'),
	sa.PrimaryKeyConstraint('rid')
	)
	op.create_index(op.f('ix_mp_client_patches_third_cuuid'), 'mp_client_patches_third', ['cuuid'], unique=False)
	op.create_index(op.f('ix_mp_client_patches_third_patch'), 'mp_client_patches_third', ['patch'], unique=False)
	op.create_index(op.f('ix_mp_client_patches_third_patch_id'), 'mp_client_patches_third', ['patch_id'], unique=False)
	op.create_index(op.f('ix_mp_client_patches_third_bundleID'), 'mp_client_patches_third', ['bundleID'], unique=False)
	op.create_table('mp_group_config',
	sa.Column('rid', sa.BigInteger(), nullable=False, autoincrement=True),
	sa.Column('group_id', sa.String(length=50), nullable=False),
	sa.Column('rev_settings', sa.BigInteger(), server_default='1', nullable=True),
	sa.Column('rev_tasks', sa.BigInteger(), server_default='1', nullable=True),
	sa.PrimaryKeyConstraint('rid')
	)
	op.create_index(op.f('ix_mp_group_config_group_id'), 'mp_group_config', ['group_id'], unique=False)
	op.create_table('mp_installed_patches',
	sa.Column('rid', sa.BigInteger(), nullable=False, autoincrement=True),
	sa.Column('cuuid', sa.String(length=50), nullable=False),
	sa.Column('mdate', sa.DateTime(), server_default='1970-01-01 00:00:00', nullable=False),
	sa.Column('patch', sa.String(length=255), nullable=False),
	sa.Column('patch_name', sa.String(length=255), server_default='NA', nullable=True),
	sa.Column('type', sa.String(length=255), nullable=False),
	sa.Column('type_int', sa.Integer(), nullable=True),
	sa.Column('server_name', sa.String(length=255), server_default='NA', nullable=True),
	sa.PrimaryKeyConstraint('rid')
	)
	op.create_index(op.f('ix_mp_installed_patches_cuuid'), 'mp_installed_patches', ['cuuid'], unique=False)
	op.create_index(op.f('ix_mp_installed_patches_patch'), 'mp_installed_patches', ['patch'], unique=False)
	op.create_index(op.f('ix_mp_installed_patches_patch_name'), 'mp_installed_patches', ['patch_name'], unique=False)
	op.create_index(op.f('ix_mp_installed_patches_patch_mdate'), 'mp_installed_patches', ['mdate'], unique=False)
	op.create_table('mp_inv_state',
	sa.Column('rid', sa.BigInteger(), nullable=False, autoincrement=True),
	sa.Column('cuuid', sa.String(length=50), nullable=False),
	sa.Column('mdate', sa.DateTime(), server_default='1970-01-01 00:00:00', nullable=True),
	sa.ForeignKeyConstraint(['cuuid'], ['mp_clients.cuuid'], onupdate='NO ACTION', ondelete='CASCADE'),
	sa.PrimaryKeyConstraint('rid')
	)
	op.create_index(op.f('ix_mp_inv_state_cuuid'), 'mp_inv_state', ['cuuid'], unique=True)
	op.create_table('mp_os_config_profiles',
	sa.Column('rid', sa.BigInteger(), nullable=False, autoincrement=True),
	sa.Column('profileID', sa.String(length=50), nullable=False),
	sa.Column('profileIdentifier', sa.String(length=255), nullable=True),
	sa.Column('profileData', sa.LargeBinary(), nullable=True),
	sa.Column('profileName', sa.String(length=255), nullable=True),
	sa.Column('profileDescription', sa.Text(), nullable=True),
	sa.Column('profileHash', sa.String(length=50), nullable=True),
	sa.Column('profileRev', sa.Integer(), nullable=True),
	sa.Column('enabled', sa.Integer(), server_default='0', nullable=True),
	sa.Column('uninstallOnRemove', sa.Integer(), server_default='1', nullable=True),
	sa.Column('cdate', sa.DateTime(), server_default='1970-01-01 00:00:00', nullable=True),
	sa.Column('mdate', sa.DateTime(), server_default='1970-01-01 00:00:00', nullable=True),
	sa.PrimaryKeyConstraint('rid', 'profileID')
	)
	op.create_index(op.f('ix_mp_os_config_profiles_profileID'), 'mp_os_config_profiles', ['profileID'], unique=False)
	op.create_table('mp_os_config_profiles_assigned',
	sa.Column('rid', sa.BigInteger(), nullable=False, autoincrement=True),
	sa.Column('profileID', sa.String(length=50), nullable=False),
	sa.Column('groupID', sa.String(length=50), nullable=False),
	sa.PrimaryKeyConstraint('rid', 'profileID', 'groupID')
	)
	op.create_index(op.f('ix_mp_os_config_profiles_assigned_profileID'), 'mp_os_config_profiles_assigned', ['profileID'], unique=False)
	op.create_table('mp_patch_group',
	sa.Column('rid', sa.BigInteger(), nullable=False, autoincrement=True),
	sa.Column('name', sa.String(length=255), nullable=False),
	sa.Column('id', sa.String(length=50), nullable=False),
	sa.Column('type', sa.Integer(), server_default='0', nullable=False),
	sa.Column('hash', sa.String(length=50), server_default='0', nullable=True),
	sa.Column('mdate', sa.DateTime(), server_default='1970-01-01 00:00:00', nullable=True),
	sa.PrimaryKeyConstraint('rid')
	)
	op.create_index(op.f('ix_mp_patch_group_id'), 'mp_patch_group', ['id'], unique=False)
	op.create_index(op.f('ix_mp_patch_group_name'), 'mp_patch_group', ['name'], unique=True)
	op.create_table('mp_patch_group_data',
	sa.Column('rid', sa.BigInteger(), nullable=False, autoincrement=True),
	sa.Column('pid', sa.String(length=50), nullable=False),
	sa.Column('hash', sa.String(length=50), nullable=False),
	sa.Column('rev', sa.BigInteger(), server_default='-1', nullable=True),
	sa.Column('data', mysql.LONGTEXT(), nullable=False),
	sa.Column('data_type', sa.String(length=4), server_default='', nullable=True),
	sa.Column('mdate', sa.DateTime(), server_default='1970-01-01 00:00:00', nullable=True),
	sa.PrimaryKeyConstraint('rid', 'pid')
	)
	op.create_index(op.f('ix_mp_patch_group_data_pid'), 'mp_patch_group_data', ['pid'], unique=False)
	op.create_table('mp_patch_group_members',
	sa.Column('rid', sa.BigInteger(), nullable=False, autoincrement=True),
	sa.Column('user_id', sa.String(length=255), nullable=False),
	sa.Column('patch_group_id', sa.String(length=50), nullable=False),
	sa.Column('is_owner', mysql.INTEGER(display_width=1, unsigned=True), server_default='0', nullable=True),
	sa.PrimaryKeyConstraint('rid')
	)
	op.create_index(op.f('ix_mp_patch_group_members_patch_group_id'), 'mp_patch_group_members', ['patch_group_id'], unique=False)
	op.create_table('mp_patch_group_patches',
	sa.Column('rid', sa.BigInteger(), nullable=False, autoincrement=True),
	sa.Column('patch_id', sa.String(length=50), nullable=False),
	sa.Column('patch_group_id', sa.String(length=50), nullable=False),
	sa.PrimaryKeyConstraint('rid')
	)
	op.create_index(op.f('ix_mp_patch_group_patches_patch_group_id'), 'mp_patch_group_patches', ['patch_group_id'], unique=False)
	op.create_index(op.f('ix_mp_patch_group_patches_patch_id'), 'mp_patch_group_patches', ['patch_id'], unique=False)
	op.create_table('mp_patches',
	sa.Column('rid', sa.BigInteger(), nullable=False, autoincrement=True),
	sa.Column('puuid', sa.String(length=50), nullable=False),
	sa.Column('bundle_id', sa.String(length=50), server_default='gov.llnl.Default', nullable=False),
	sa.Column('patch_name', sa.String(length=100), nullable=False),
	sa.Column('patch_ver', sa.String(length=20), nullable=False),
	sa.Column('patch_vendor', sa.String(length=255), server_default='NA', nullable=True),
	sa.Column('patch_install_weight', sa.Integer(), server_default='30', nullable=True),
	sa.Column('description', sa.String(length=255), nullable=True),
	sa.Column('description_url', sa.String(length=255), nullable=True),
	sa.Column('patch_severity', sa.String(length=10), nullable=False),
	sa.Column('patch_state', sa.String(length=10), nullable=False),
	sa.Column('patch_reboot', sa.String(length=3), nullable=False),
	sa.Column('cve_id', sa.String(length=255), nullable=True),
	sa.Column('active', mysql.INTEGER(display_width=1, unsigned=True), server_default='0', nullable=True),
	sa.Column('pkg_preinstall', sa.Text(), nullable=True),
	sa.Column('pkg_postinstall', sa.Text(), nullable=True),
	sa.Column('pkg_name', sa.String(length=100), nullable=True),
	sa.Column('pkg_size', sa.String(length=100), server_default='0', nullable=True),
	sa.Column('pkg_hash', sa.String(length=100), nullable=True),
	sa.Column('pkg_path', sa.String(length=255), nullable=True),
	sa.Column('pkg_url', sa.String(length=255), nullable=True),
	sa.Column('pkg_env_var', sa.String(length=255), nullable=True),
	sa.Column('cdate', sa.DateTime(), server_default='1970-01-01 00:00:00', nullable=True),
	sa.Column('mdate', sa.DateTime(), server_default='1970-01-01 00:00:00', nullable=True),
	sa.PrimaryKeyConstraint('rid', 'puuid')
	)
	op.create_index(op.f('ix_mp_patches_puuid'), 'mp_patches', ['puuid'], unique=False)
	op.create_index(op.f('ix_mp_patches_bundle_id'), 'mp_patches', ['bundle_id'], unique=False)
	op.create_index(op.f('ix_mp_patches_patch_name'), 'mp_patches', ['patch_name'], unique=False)
	op.create_index(op.f('ix_mp_patches_patch_ver'), 'mp_patches', ['patch_ver'], unique=False)
	op.create_index(op.f('ix_mp_patches_active'), 'mp_patches', ['active'], unique=False)
	op.create_table('mp_patches_criteria',
	sa.Column('rid', sa.BigInteger(), nullable=False, autoincrement=True),
	sa.Column('puuid', sa.String(length=50), nullable=False),
	sa.Column('type', sa.String(length=50), nullable=False),
	sa.Column('type_data', sa.Text(), nullable=False),
	sa.Column('type_order', sa.Integer(), nullable=False),
	sa.Column('type_required_order', sa.Integer(), server_default='0', nullable=False),
	sa.PrimaryKeyConstraint('rid', 'puuid')
	)
	op.create_index(op.f('ix_mp_patches_criteria_puuid'), 'mp_patches_criteria', ['puuid'], unique=False)
	op.create_table('mp_patches_requisits',
	sa.Column('rid', sa.BigInteger(), nullable=False, autoincrement=True),
	sa.Column('puuid', sa.String(length=50), nullable=True),
	sa.Column('type', sa.Integer(), server_default='0', nullable=True),
	sa.Column('type_txt', sa.String(length=255), nullable=True),
	sa.Column('type_order', sa.Integer(), server_default='0', nullable=True),
	sa.Column('puuid_ref', sa.String(length=50), nullable=True),
	sa.PrimaryKeyConstraint('rid')
	)
	op.create_index(op.f('ix_mp_patches_requisits_puuid'), 'mp_patches_requisits', ['puuid'], unique=False)
	op.create_index(op.f('ix_mp_patches_requisits_puuid_ref'), 'mp_patches_requisits', ['puuid_ref'], unique=False)
	op.create_table('mp_reg_keys',
	sa.Column('rid', sa.BigInteger(), nullable=False, autoincrement=True),
	sa.Column('regKey', sa.String(length=255), nullable=False),
	sa.Column('keyType', sa.Integer(), server_default='0', nullable=True),
	sa.Column('keyQuery', sa.String(length=255), nullable=False),
	sa.Column('active', sa.Integer(), server_default='1', nullable=True),
	sa.Column('validFromDate', sa.DateTime(), server_default='1970-01-01 00:00:00', nullable=True),
	sa.Column('validToDate', sa.DateTime(), server_default='1970-01-01 00:00:00', nullable=True),
	sa.PrimaryKeyConstraint('rid')
	)
	op.create_table('mp_site_keys',
	sa.Column('rid', sa.BigInteger(), nullable=False, autoincrement=True),
	sa.Column('pubKey', mysql.MEDIUMTEXT(), nullable=False),
	sa.Column('pubKeyHash', sa.String(length=255), nullable=False),
	sa.Column('priKey', mysql.MEDIUMTEXT(), nullable=False),
	sa.Column('priKeyHash', sa.String(length=255), nullable=False),
	sa.Column('active', sa.Integer(), server_default='1', nullable=True),
	sa.Column('request_new_key', sa.Integer(), server_default='0', nullable=True),
	sa.Column('mdate', sa.DateTime(), server_default='1970-01-01 00:00:00', nullable=True),
	sa.PrimaryKeyConstraint('rid')
	)
	op.create_table('mp_server_list',
	sa.Column('rid', sa.BigInteger(), nullable=False, autoincrement=True),
	sa.Column('listid', sa.String(length=50), nullable=False),
	sa.Column('name', sa.String(length=255), nullable=False),
	sa.Column('version', sa.Integer(), server_default='0', nullable=False),
	sa.PrimaryKeyConstraint('rid', 'listid')
	)
	op.create_index(op.f('ix_mp_server_list_listid'), 'mp_server_list', ['listid'], unique=False)
	op.create_table('mp_servers',
	sa.Column('rid', sa.BigInteger(), nullable=False, autoincrement=True),
	sa.Column('listid', sa.String(length=50), nullable=False),
	sa.Column('server', sa.String(length=255), nullable=False),
	sa.Column('port', sa.Integer(), server_default='2600', nullable=False),
	sa.Column('useSSL', sa.Integer(), server_default='1', nullable=False),
	sa.Column('useSSLAuth', sa.Integer(), server_default='0', nullable=False),
	sa.Column('allowSelfSignedCert', sa.Integer(), server_default='1', nullable=False),
	sa.Column('isMaster', sa.Integer(), server_default='0', nullable=False),
	sa.Column('isProxy', sa.Integer(), server_default='0', nullable=False),
	sa.Column('active', sa.Integer(), server_default='1', nullable=False),
	sa.PrimaryKeyConstraint('rid')
	)
	op.create_index(op.f('ix_mp_servers_listid'), 'mp_servers', ['listid'], unique=False)
	op.create_table('mp_software',
	sa.Column('rid', sa.BigInteger(), nullable=False, autoincrement=True),
	sa.Column('suuid', sa.String(length=50), nullable=False),
	sa.Column('patch_bundle_id', sa.String(length=100), nullable=True),
	sa.Column('auto_patch', sa.Integer(), server_default='0', nullable=False),
	sa.Column('sState', sa.Integer(), server_default='0', nullable=True),
	sa.Column('sName', sa.String(length=255), nullable=False),
	sa.Column('sVendor', sa.String(length=255), nullable=True),
	sa.Column('sVersion', sa.String(length=40), nullable=False),
	sa.Column('sDescription', sa.String(length=255), nullable=True),
	sa.Column('sVendorURL', sa.String(length=255), nullable=True),
	sa.Column('sReboot', sa.Integer(), server_default='1', nullable=True),
	sa.Column('sw_type', sa.String(length=10), nullable=True),
	sa.Column('sw_path', sa.String(length=255), nullable=True),
	sa.Column('sw_url', sa.String(length=255), nullable=True),
	sa.Column('sw_size', sa.BigInteger(), server_default='0', nullable=True),
	sa.Column('sw_hash', sa.String(length=50), nullable=True),
	sa.Column('sw_pre_install_script', mysql.LONGTEXT(), nullable=True),
	sa.Column('sw_post_install_script', mysql.LONGTEXT(), nullable=True),
	sa.Column('sw_uninstall_script', mysql.LONGTEXT(), nullable=True),
	sa.Column('sw_env_var', sa.String(length=255), nullable=True),
	sa.Column('cdate', sa.DateTime(), server_default='1970-01-01 00:00:00', nullable=True),
	sa.Column('mdate', sa.DateTime(), server_default='1970-01-01 00:00:00', nullable=True),
	sa.PrimaryKeyConstraint('rid', 'suuid')
	)
	op.create_index(op.f('ix_mp_software_suuid'), 'mp_software', ['suuid'], unique=False)
	op.create_index(op.f('ix_mp_software_patch_bundle_id'), 'mp_software', ['patch_bundle_id'], unique=False)
	op.create_table('mp_software_criteria',
	sa.Column('rid', sa.BigInteger(), nullable=False, autoincrement=True),
	sa.Column('suuid', sa.String(length=50), nullable=False),
	sa.Column('type', sa.String(length=50), nullable=False),
	sa.Column('type_data', sa.Text(), nullable=False),
	sa.Column('type_order', sa.Integer(), nullable=False),
	sa.Column('type_required_order', sa.Integer(), server_default='0', nullable=False),
	sa.PrimaryKeyConstraint('rid', 'suuid')
	)
	op.create_index(op.f('ix_mp_software_criteria_suuid'), 'mp_software_criteria', ['suuid'], unique=False)
	op.create_table('mp_software_group_tasks',
	sa.Column('rid', sa.BigInteger(), nullable=False, autoincrement=True),
	sa.Column('sw_group_id', sa.String(length=50), nullable=False),
	sa.Column('sw_task_id', sa.String(length=50), nullable=False),
	sa.Column('selected', sa.Integer(), server_default='0', nullable=True),
	sa.PrimaryKeyConstraint('rid')
	)
	op.create_index(op.f('ix_mp_software_group_tasks_sw_group_id'), 'mp_software_group_tasks', ['sw_group_id'], unique=False)
	op.create_table('mp_software_groups',
	sa.Column('rid', sa.BigInteger(), nullable=False, autoincrement=True),
	sa.Column('gid', sa.String(length=50), nullable=False),
	sa.Column('gName', sa.String(length=255), nullable=False),
	sa.Column('gDescription', sa.String(length=255), nullable=True),
	sa.Column('gType', sa.Integer(), server_default='0', nullable=False),
	sa.Column('gHash', sa.String(length=50), server_default='0', nullable=True),
	sa.Column('state', sa.Integer(), server_default='1', nullable=True),
	sa.Column('cdate', sa.DateTime(), server_default='1970-01-01 00:00:00', nullable=True),
	sa.Column('mdate', sa.DateTime(), server_default='1970-01-01 00:00:00', nullable=True),
	sa.PrimaryKeyConstraint('rid', 'gid')
	)
	op.create_index(op.f('ix_mp_software_groups_gid'), 'mp_software_groups', ['gid'], unique=False)
	op.create_table('mp_software_groups_filters',
	sa.Column('rid', sa.BigInteger(), nullable=False, autoincrement=True),
	sa.Column('gid', sa.String(length=50), nullable=False),
	sa.Column('attribute', sa.String(length=255), nullable=True),
	sa.Column('attribute_oper', sa.String(length=255), nullable=True),
	sa.Column('attribute_filter', sa.String(length=255), nullable=True),
	sa.Column('attribute_condition', sa.String(length=255), nullable=True),
	sa.Column('datasource', sa.String(length=255), nullable=True),
	sa.PrimaryKeyConstraint('rid')
	)
	op.create_index(op.f('ix_mp_software_groups_filters_gid'), 'mp_software_groups_filters', ['gid'], unique=False)
	op.create_table('mp_software_groups_privs',
	sa.Column('rid', sa.BigInteger(), nullable=False, autoincrement=True),
	sa.Column('gid', sa.String(length=50), nullable=False),
	sa.Column('uid', sa.String(length=255), nullable=False),
	sa.Column('isowner', sa.Integer(), server_default='0', nullable=False),
	sa.PrimaryKeyConstraint('rid')
	)
	op.create_index(op.f('ix_mp_software_groups_privs_gid'), 'mp_software_groups_privs', ['gid'], unique=False)
	op.create_table('mp_software_requisits',
	sa.Column('rid', sa.BigInteger(), nullable=False, autoincrement=True),
	sa.Column('suuid', sa.String(length=50), nullable=True),
	sa.Column('type', sa.Integer(), server_default='0', nullable=True),
	sa.Column('type_txt', sa.String(length=255), nullable=True),
	sa.Column('type_order', sa.Integer(), server_default='0', nullable=True),
	sa.Column('suuid_ref', sa.String(length=50), nullable=True),
	sa.PrimaryKeyConstraint('rid')
	)
	op.create_index(op.f('ix_mp_software_requisits_suuid'), 'mp_software_requisits', ['suuid'], unique=False)
	op.create_index(op.f('ix_mp_software_requisits_suuid_ref'), 'mp_software_requisits', ['suuid_ref'], unique=False)
	op.create_table('mp_software_task',
	sa.Column('rid', sa.BigInteger(), nullable=False, autoincrement=True),
	sa.Column('tuuid', sa.String(length=50), nullable=False),
	sa.Column('name', sa.String(length=255), nullable=False),
	sa.Column('primary_suuid', sa.String(length=50), nullable=True),
	sa.Column('active', sa.Integer(), server_default='0', nullable=True),
	sa.Column('sw_task_type', sa.String(length=2), server_default='o', nullable=True),
	sa.Column('sw_task_privs', sa.String(length=255), server_default='Global', nullable=True),
	sa.Column('sw_start_datetime', sa.DateTime(), server_default='1970-01-01 00:00:00', nullable=True),
	sa.Column('sw_end_datetime', sa.DateTime(), server_default='1970-01-01 00:00:00', nullable=True),
	sa.Column('mdate', sa.DateTime(), server_default='1970-01-01 00:00:00', nullable=True),
	sa.Column('cdate', sa.DateTime(), server_default='1970-01-01 00:00:00', nullable=True),
	sa.PrimaryKeyConstraint('rid')
	)
	op.create_index(op.f('ix_mp_software_task_tuuid'), 'mp_software_task', ['tuuid'], unique=False)
	op.create_index(op.f('ix_mp_software_task_primary_suuid'), 'mp_software_task', ['primary_suuid'], unique=False)
	op.create_table('mp_software_tasks_data',
	sa.Column('rid', sa.BigInteger(), nullable=False, autoincrement=True),
	sa.Column('gid', sa.String(length=50), nullable=False),
	sa.Column('gDataHash', sa.String(length=50), nullable=False),
	sa.Column('gData', mysql.LONGTEXT(), nullable=False),
	sa.Column('mdate', sa.DateTime(), server_default='1970-01-01 00:00:00', nullable=True),
	sa.PrimaryKeyConstraint('rid')
	)
	op.create_index(op.f('ix_mp_software_tasks_data_gid'), 'mp_software_tasks_data', ['gid'], unique=False)
	op.create_table('mp_upload_request',
	sa.Column('rid', sa.BigInteger(), nullable=False, autoincrement=True),
	sa.Column('uid', sa.String(length=255), nullable=False),
	sa.Column('requestid', sa.String(length=50), nullable=False),
	sa.Column('enabled', sa.Integer(), server_default='1', nullable=True),
	sa.Column('cdate', sa.DateTime(), server_default='1970-01-01 00:00:00', nullable=True),
	sa.PrimaryKeyConstraint('rid')
	)
	op.create_table('mp_user',
	sa.Column('rid', sa.Integer(), nullable=False, autoincrement=True),
	sa.Column('username', sa.String(length=80), nullable=True),
	sa.Column('email', sa.String(length=120), nullable=True),
	sa.Column('password_hash', sa.String(length=255), nullable=True),
	sa.PrimaryKeyConstraint('rid'),
	sa.UniqueConstraint('email'),
	sa.UniqueConstraint('username')
	)
	op.create_table('mp_software_installs',
	sa.Column('rid', sa.BigInteger(), nullable=False, autoincrement=True),
	sa.Column('cuuid', sa.String(length=50), server_default='', nullable=False),
	sa.Column('tuuid', sa.String(length=50), nullable=True),
	sa.Column('suuid', sa.String(length=50), nullable=True),
	sa.Column('action', sa.String(length=1), server_default='i', nullable=True),
	sa.Column('result', sa.Integer(), nullable=True),
	sa.Column('resultString', sa.Text(), nullable=True),
	sa.Column('cdate', sa.DateTime(), server_default='1970-01-01 00:00:00', nullable=True),
	sa.ForeignKeyConstraint(['cuuid'], ['mp_clients.cuuid'], onupdate='NO ACTION', ondelete='CASCADE'),
	sa.PrimaryKeyConstraint('rid')
	)
	op.create_index(op.f('ix_mp_software_installs_cuuid'), 'mp_software_installs', ['cuuid'], unique=False)
	op.create_index(op.f('ix_mp_software_installs_tuuid'), 'mp_software_installs', ['tuuid'], unique=False)
	op.create_index(op.f('ix_mp_software_installs_suuid'), 'mp_software_installs', ['suuid'], unique=False)
	op.create_table('mpi_DirectoryServices',
	sa.Column('rid', sa.BigInteger(), nullable=False, autoincrement=True),
	sa.Column('cuuid', sa.String(length=50), nullable=False),
	sa.Column('mdate', sa.DateTime(), server_default='1970-01-01 00:00:00', nullable=True),
	sa.Column('mpa_cn', sa.String(length=255), nullable=True),
	sa.Column('mpa_AD_Kerberos_ID', sa.String(length=255), nullable=True),
	sa.Column('mpa_HasSLAM', sa.String(length=255), nullable=True),
	sa.Column('mpa_distinguishedName', sa.String(length=255), nullable=True),
	sa.Column('mpa_AD_Computer_ID', sa.String(length=255), nullable=True),
	sa.Column('mpa_DNSName', sa.String(length=255), nullable=True),
	sa.Column('mpa_Bound_To_Domain', sa.String(length=255), nullable=True),
	sa.Column('mpa_ADDomain', sa.String(length=255), nullable=True),
	sa.ForeignKeyConstraint(['cuuid'], ['mp_clients.cuuid'], onupdate='NO ACTION', ondelete='CASCADE'),
	sa.PrimaryKeyConstraint('rid')
	)
	op.create_index(op.f('ix_mpi_DirectoryServices_cuuid'), 'mpi_DirectoryServices', ['cuuid'], unique=True)
	op.create_index(op.f('ix_mpi_DirectoryServices_mpa_distinguishedName'), 'mpi_DirectoryServices', ['mpa_distinguishedName'], unique=False)
	op.create_table('mpi_SPHardwareOverview',
	sa.Column('rid', sa.BigInteger(), nullable=False, autoincrement=True),
	sa.Column('cuuid', sa.String(length=50), nullable=False),
	sa.Column('mdate', sa.DateTime(), server_default='1970-01-01 00:00:00', nullable=True),
	sa.Column('mpa_Model_Name', sa.String(length=255), nullable=True),
	sa.Column('mpa_Model_Identifier', sa.String(length=255), nullable=True),
	sa.Column('mpa_Processor_Name', sa.String(length=255), nullable=True),
	sa.Column('mpa_Processor_Speed', sa.String(length=255), nullable=True),
	sa.Column('mpa_Number_of_Processors', sa.String(length=255), nullable=True),
	sa.Column('mpa_Total_Number_of_Cores', sa.String(length=255), nullable=True),
	sa.Column('mpa_L2_Cache', sa.String(length=255), nullable=True),
	sa.Column('mpa_Memory', sa.String(length=255), nullable=True),
	sa.Column('mpa_Bus_Speed', sa.String(length=255), nullable=True),
	sa.Column('mpa_Boot_ROM_Version', sa.String(length=255), nullable=True),
	sa.Column('mpa_SMC_Version', sa.String(length=255), nullable=True),
	sa.Column('mpa_Serial_Number', sa.String(length=255), nullable=True),
	sa.Column('mpa_Hardware_UUID', sa.String(length=255), nullable=True),
	sa.Column('mpa_Sudden_Motion_Sensor', sa.String(length=255), nullable=True),
	sa.Column('mpa_State', sa.String(length=255), nullable=True),
	sa.Column('mpa_L3_Cache', sa.String(length=255), nullable=True),
	sa.Column('mpa_Processor_Interconnect_Speed', sa.String(length=255), nullable=True),
	sa.Column('mpa_Sales_Order_Number', sa.String(length=255), nullable=True),
	sa.Column('mpa_Version', sa.String(length=255), nullable=True),
	sa.Column('mpa_LOM_Revision', sa.String(length=255), nullable=True),
	sa.Column('mpa_Machine_Name', sa.String(length=255), nullable=True),
	sa.Column('mpa_Machine_Model', sa.String(length=255), nullable=True),
	sa.Column('mpa_CPU_Type', sa.String(length=255), nullable=True),
	sa.Column('mpa_CPU_Speed', sa.String(length=255), nullable=True),
	sa.Column('mpa_L3_Cache_per_CPU', sa.String(length=255), nullable=True),
	sa.Column('mpa_serial_number_processor_tray', sa.String(length=255), nullable=True),
	sa.Column('mpa_l3_cache_per_processor', sa.String(length=255), nullable=True),
	sa.Column('mpa_smc_version_processor_tray', sa.String(length=255), nullable=True),
	sa.Column('mpa_illumination_version', sa.String(length=255), nullable=True),
	sa.ForeignKeyConstraint(['cuuid'], ['mp_clients.cuuid'], onupdate='NO ACTION', ondelete='CASCADE'),
	sa.PrimaryKeyConstraint('rid')
	)
	op.create_index(op.f('ix_mpi_SPHardwareOverview_cuuid'), 'mpi_SPHardwareOverview', ['cuuid'], unique=True)
	### end Alembic commands ###

	### Add MacPatch VIEWS ###
	op.execute('DROP VIEW IF EXISTS `mp_clients_view`;')
	qstr = '''CREATE ALGORITHM=UNDEFINED SQL SECURITY DEFINER VIEW `mp_clients_view` AS
	select `mp_clients`.`cuuid` AS `cuuid`,`mp_clients`.`serialno` AS `serialNo`,
	`mp_clients`.`hostname` AS `hostname`,`mp_clients`.`computername` AS `computername`,
	`mp_clients`.`ipaddr` AS `ipaddr`,`mp_clients`.`macaddr` AS `macaddr`,`mp_clients`.`osver` AS `osver`,
	`mp_clients`.`ostype` AS `ostype`,`mp_clients`.`consoleuser` AS `consoleUser`,
	`mp_clients`.`needsreboot` AS `needsreboot`,`mp_clients`.`agent_version` AS `agent_version`,
	`mp_clients`.`client_version` AS `client_version`,`mp_clients`.`agent_build` AS `agent_build`,
	`mp_clients`.`mdate` AS `mdate` ,
	`mp_clients_plist`.`EnableASUS` AS `EnableASUS`,
	`mp_clients_plist`.`MPDLTimeout` AS `MPDLTimeout`,`mp_clients_plist`.`AllowClient` AS `AllowClient`,
	`mp_clients_plist`.`MPServerSSL` AS `MPServerSSL`,`mp_clients_plist`.`Domain` AS `Domain`,
	`mp_clients_plist`.`Name` AS `Name`,`mp_clients_plist`.`MPInstallTimeout` AS `MPInstallTimeout`,
	`mp_clients_plist`.`MPServerDLLimit` AS `MPServerDLLimit`,`mp_clients_plist`.`PatchGroup` AS `PatchGroup`,
	`mp_clients_plist`.`MPProxyEnabled` AS `MPProxyEnabled`,`mp_clients_plist`.`Description` AS `Description`,
	`mp_clients_plist`.`MPDLConTimeout` AS `MPDLConTimeout`,`mp_clients_plist`.`MPProxyServerPort` AS `MPProxyServerPort`,
	`mp_clients_plist`.`MPProxyServerAddress` AS `MPProxyServerAddress`,`mp_clients_plist`.`AllowServer` AS `AllowServer`,
	`mp_clients_plist`.`MPServerAddress` AS `MPServerAddress`,`mp_clients_plist`.`MPServerPort` AS `MPServerPort`,
	`mp_clients_plist`.`MPServerTimeout` AS `MPServerTimeout`,`mp_clients_plist`.`Reboot` AS `Reboot`,
	`mp_clients_plist`.`DialogText` AS `DialogText`,`mp_clients_plist`.`PatchState` AS `PatchState`,
	`mpi_DirectoryServices`.`mpa_distinguishedName` AS `DistinguishedName`,
	substring_index(substring_index(`mpi_DirectoryServices`.`mpa_distinguishedName`,'OU=',-(1)),',',1) AS `AD-OU`
	from ((`mp_clients` left join `mp_clients_plist` on((`mp_clients`.`cuuid` = `mp_clients_plist`.`cuuid`)))
		left join `mpi_DirectoryServices` on((convert(`mp_clients`.`cuuid` using utf8) = `mpi_DirectoryServices`.`cuuid`)));
	'''
	op.execute(qstr)

	op.execute('DROP VIEW IF EXISTS `mp_client_patches_apple_view`;')
	qstr1=''' CREATE ALGORITHM=UNDEFINED SQL SECURITY DEFINER VIEW `mp_client_patches_apple_view` AS
	select `mpca`.`rid` AS `rid`,`mpca`.`cuuid` AS `cuuid`,`mpca`.`mdate` AS `date`,`mpca`.`patch` AS `patch`,
	`mpca`.`type` AS `type`,`mpca`.`description` AS `description`,`mpca`.`size` AS `size`,
	`mpca`.`recommended` AS `recommended`,`mpca`.`restart` AS `restart`,`ap`.`akey` AS `patch_id`
	from (`mp_client_patches_apple` `mpca` left join `apple_patches` `ap` on((`ap`.`supatchname` = `mpca`.`patch`)));
	'''
	op.execute(qstr1)

	op.execute('DROP VIEW IF EXISTS `mp_client_patches_third_view`;')
	qstr2='''CREATE ALGORITHM=UNDEFINED SQL SECURITY DEFINER VIEW `mp_client_patches_third_view` AS
	select `mpca`.`rid` AS `rid`,`mpca`.`cuuid` AS `cuuid`,`mpca`.`mdate` AS `date`,
	concat(`mpp`.`patch_name`,'-',`mpp`.`patch_ver`) AS `patch`,`mpca`.`type` AS `type`,
	`mpca`.`description` AS `description`,`mpca`.`size` AS `size`,`mpca`.`recommended` AS `recommended`,
	`mpca`.`restart` AS `restart`,`mpca`.`patch_id` AS `patch_id`
	from (`mp_client_patches_third` `mpca` join `mp_patches` `mpp` on((`mpp`.`puuid` = `mpca`.`patch_id`)));
	'''
	op.execute(qstr2)

	op.execute('DROP VIEW IF EXISTS `mp_client_patches_full_view`;')
	qstr3='''CREATE ALGORITHM=UNDEFINED SQL SECURITY DEFINER VIEW `mp_client_patches_full_view` AS
	select `mp_client_patches_apple_view`.`cuuid` AS `cuuid`,`mp_client_patches_apple_view`.`date` AS `date`,
	`mp_client_patches_apple_view`.`patch` AS `patch`,`mp_client_patches_apple_view`.`type` AS `type`,
	`mp_client_patches_apple_view`.`description` AS `description`,`mp_client_patches_apple_view`.`size` AS `size`,
	`mp_client_patches_apple_view`.`recommended` AS `recommended`,`mp_client_patches_apple_view`.`restart` AS `restart`,
	`mp_client_patches_apple_view`.`patch_id` AS `patch_id`
	from `mp_client_patches_apple_view` union select `mp_client_patches_third_view`.`cuuid` AS `cuuid`,
	`mp_client_patches_third_view`.`date` AS `date`,`mp_client_patches_third_view`.`patch` AS `patch`,
	`mp_client_patches_third_view`.`type` AS `type`,`mp_client_patches_third_view`.`description` AS `description`,
	`mp_client_patches_third_view`.`size` AS `size`,`mp_client_patches_third_view`.`recommended` AS `recommended`,
	`mp_client_patches_third_view`.`restart` AS `restart`,`mp_client_patches_third_view`.`patch_id` AS `patch_id`
	from `mp_client_patches_third_view`;
	'''
	op.execute(qstr3)

	op.execute('DROP VIEW IF EXISTS `combined_patches_view`;')
	qstr4='''CREATE ALGORITHM=UNDEFINED SQL SECURITY DEFINER VIEW `combined_patches_view` AS
	select distinct `ap`.`akey` AS `id`,`ap`.`patchname` AS `name`,`ap`.`version` AS `version`,
	`ap`.`postdate` AS `postdate`,`ap`.`title` AS `title`,
	(case when (`ap`.`restartaction` = 'NoRestart') then  'No' when (`ap`.`restartaction` = 'RequireRestart') then  'Yes' end) AS `reboot`,
	 'Apple' AS `type`,`ap`.`supatchname` AS `suname`,1 AS `active`,`apa`.`severity` AS `severity`,
	 `apa`.`patch_state` AS `patch_state`,`apa`.`patch_install_weight` AS `patch_install_weight`,
	 `apa`.`patch_reboot` AS `patch_reboot_override`,0 AS `size`
	 from (`apple_patches_mp_additions` `apa` left join `apple_patches` `ap`
		on((`ap`.`supatchname` = `apa`.`supatchname`)))
	union all select `mp_patches`.`puuid` AS `id`,`mp_patches`.`patch_name` AS `name`,`mp_patches`.`patch_ver` AS `version`,
	`mp_patches`.`cdate` AS `postdate`,`mp_patches`.`description` AS `title`,`mp_patches`.`patch_reboot` AS `reboot`,
	'Third' AS `type`,concat(`mp_patches`.`patch_name`,'-',`mp_patches`.`patch_ver`) AS `suname`,
	`mp_patches`.`active` AS `active`,`mp_patches`.`patch_severity` AS `severity`,`mp_patches`.`patch_state` AS `patch_state`,
	`mp_patches`.`patch_install_weight` AS `patch_install_weight`,
	(case when (`mp_patches`.`patch_reboot` = 'Yes') then  '1' when (`mp_patches`.`patch_reboot` = 'No') then  '0' end) AS `patch_reboot_override`,
	`mp_patches`.`pkg_size` AS `size` from `mp_patches`;
	'''
	op.execute(qstr4)

	op.execute('DROP VIEW IF EXISTS `mp_client_patch_status_view`;')
	qstr5='''CREATE ALGORITHM=UNDEFINED SQL SECURITY DEFINER VIEW `mp_client_patch_status_view` AS
	select `a`.`cuuid` AS `cuuid`,`a`.`date` AS `date`,`a`.`patch` AS `patch`,`a`.`type` AS `type`,
	`a`.`description` AS `description`,`a`.`size` AS `size`,`a`.`recommended` AS `recommended`,
	`a`.`restart` AS `restart`,`a`.`patch_id` AS `patch_id`,`cci`.`hostname` AS `hostname`,
	`cci`.`Domain` AS `ClientGroup`,`cci`.`ipaddr` AS `ipaddr`,`cci`.`PatchGroup` AS `PatchGroup`,
	(to_days(`a`.`date`) - to_days(`cpv`.`postdate`)) AS `DaysNeeded`
	from ((`mp_client_patches_full_view` `a` left join `combined_patches_view` `cpv`
	 on((`cpv`.`id` = `a`.`patch_id`))) left join `mp_clients_view` `cci`
	on((`a`.`cuuid` = `cci`.`cuuid`))) where (`a`.`date` <>  '0000-00-00 00:00:00');
	'''
	op.execute(qstr5)

	op.execute('DROP VIEW IF EXISTS `client_patch_status_view`;')
	qstr6='''CREATE ALGORITHM=UNDEFINED SQL SECURITY DEFINER VIEW `client_patch_status_view` AS select
	`a`.`cuuid` AS `cuuid`,`a`.`date` AS `date`,`a`.`patch` AS `patch`,`a`.`type` AS `type`,`a`.`description` AS `description`,
	`a`.`size` AS `size`,`a`.`recommended` AS `recommended`,`a`.`restart` AS `restart`,`a`.`patch_id` AS `patch_id`,
	`cci`.`hostname` AS `hostname`,`cci`.`Domain` AS `ClientGroup`,`cci`.`ipaddr` AS `ipaddr`,
	(to_days(`a`.`date`) - to_days(`cpv`.`postdate`)) AS `DaysNeeded`
	from ((`mp_client_patches_full_view` `a` left join `combined_patches_view` `cpv`
		on((`cpv`.`id` = `a`.`patch_id`))) left join `mp_clients_view` `cci` on((`a`.`cuuid` = `cci`.`cuuid`)))
	where (`a`.`date` <>  '0000-00-00 00:00:00');
	'''
	op.execute(qstr6)

def downgrade():
	### commands auto generated by Alembic - please adjust! ###
	op.drop_index(op.f('ix_mpi_SPHardwareOverview_cuuid'), table_name='mpi_SPHardwareOverview')
	op.drop_table('mpi_SPHardwareOverview')
	op.drop_index(op.f('ix_mpi_DirectoryServices_mpa_distinguishedName'), table_name='mpi_DirectoryServices')
	op.drop_index(op.f('ix_mpi_DirectoryServices_cuuid'), table_name='mpi_DirectoryServices')
	op.drop_table('mpi_DirectoryServices')
	op.drop_index(op.f('ix_mp_software_installs_cuuid'), table_name='mp_software_installs')
	op.drop_index(op.f('ix_mp_software_installs_tuuid'), table_name='mp_software_installs')
	op.drop_index(op.f('ix_mp_software_installs_suuid'), table_name='mp_software_installs')
	op.drop_table('mp_software_installs')
	op.drop_index(op.f('ix_mp_inv_state_cuuid'), table_name='mp_inv_state')
	op.drop_table('mp_inv_state')
	op.drop_index(op.f('ix_mp_clients_plist_cuuid'), table_name='mp_clients_plist')
	op.drop_index(op.f('ix_mp_clients_plist_PatchGroup'), table_name='mp_clients_plist')
	op.drop_index(op.f('ix_mp_clients_plist_Domain'), table_name='mp_clients_plist')
	op.drop_table('mp_clients_plist')
	op.drop_index(op.f('ix_mp_client_patches_cuuid'), table_name='mp_client_patches')
	op.drop_index(op.f('ix_mp_client_patches_patch'), table_name='mp_client_patches')
	op.drop_index(op.f('ix_mp_client_patches_type'), table_name='mp_client_patches')
	op.drop_table('mp_client_patches')
	op.drop_index(op.f('ix_mp_client_patches_third_cuuid'), table_name='mp_client_patches_third')
	op.drop_index(op.f('ix_mp_client_patches_third_patch'), table_name='mp_client_patches_third')
	op.drop_index(op.f('ix_mp_client_patches_third_patch_id'), table_name='mp_client_patches_third')
	op.drop_index(op.f('ix_mp_client_patches_third_bundleID'), table_name='mp_client_patches_third')
	op.drop_table('mp_client_patches_third')
	op.drop_index(op.f('ix_mp_client_patches_apple_cuuid'), table_name='mp_client_patches_apple')
	op.drop_index(op.f('ix_mp_client_patches_apple_patch'), table_name='mp_client_patches_apple')
	op.drop_table('mp_client_patches_apple')
	op.drop_index(op.f('ix_av_info_cuuid'), table_name='av_info')
	op.drop_table('av_info')
	op.drop_table('mp_user')
	op.drop_table('mp_upload_request')
	op.drop_index(op.f('ix_mp_software_tasks_data_gid'), table_name='mp_software_tasks_data')
	op.drop_table('mp_software_tasks_data')
	op.drop_index(op.f('ix_mp_software_task_primary_suuid'), table_name='mp_software_task')
	op.drop_index(op.f('ix_mp_software_task_tuuid'), table_name='mp_software_task')
	op.drop_table('mp_software_task')
	op.drop_index(op.f('ix_mp_software_requisits_suuid_ref'), table_name='mp_software_requisits')
	op.drop_index(op.f('ix_mp_software_requisits_suuid'), table_name='mp_software_requisits')
	op.drop_table('mp_software_requisits')
	op.drop_index(op.f('ix_mp_software_groups_privs_gid'), table_name='mp_software_groups_privs')
	op.drop_table('mp_software_groups_privs')
	op.drop_index(op.f('ix_mp_software_groups_filters_gid'), table_name='mp_software_groups_filters')
	op.drop_table('mp_software_groups_filters')
	op.drop_index(op.f('ix_mp_software_groups_gid'), table_name='mp_software_groups')
	op.drop_table('mp_software_groups')
	op.drop_index(op.f('ix_mp_software_group_tasks_sw_group_id'), table_name='mp_software_group_tasks')
	op.drop_table('mp_software_group_tasks')
	op.drop_index(op.f('ix_mp_software_criteria_suuid'), table_name='mp_software_criteria')
	op.drop_table('mp_software_criteria')
	op.drop_index(op.f('ix_mp_software_patch_bundle_id'), table_name='mp_software')
	op.drop_index(op.f('ix_mp_software_suuid'), table_name='mp_software')
	op.drop_table('mp_software')
	op.drop_table('mp_site_keys')
	op.drop_index(op.f('ix_mp_servers_listid'), table_name='mp_servers')
	op.drop_table('mp_servers')
	op.drop_index(op.f('ix_mp_server_list_listid'), table_name='mp_server_list')
	op.drop_table('mp_server_list')
	op.drop_table('mp_reg_keys')
	op.drop_index(op.f('ix_mp_patches_requisits_puuid'), table_name='mp_patches_requisits')
	op.drop_index(op.f('ix_mp_patches_requisits_puuid_ref'), table_name='mp_patches_requisits')
	op.drop_table('mp_patches_requisits')
	op.drop_index(op.f('ix_mp_patches_criteria_puuid'), table_name='mp_patches_criteria')
	op.drop_table('mp_patches_criteria')
	op.drop_index(op.f('ix_mp_patches_puuid'), table_name='mp_patches')
	op.drop_index(op.f('ix_mp_patches_bundle_id'), table_name='mp_patches')
	op.drop_index(op.f('ix_mp_patches_patch_name'), table_name='mp_patches')
	op.drop_index(op.f('ix_mp_patches_patch_ver'), table_name='mp_patches')
	op.drop_index(op.f('ix_mp_patches_active'), table_name='mp_patches')
	op.drop_table('mp_patches')
	op.drop_index(op.f('ix_mp_patch_group_patches_patch_id'), table_name='mp_patch_group_patches')
	op.drop_index(op.f('ix_mp_patch_group_patches_patch_group_id'), table_name='mp_patch_group_patches')
	op.drop_table('mp_patch_group_patches')
	op.drop_index(op.f('ix_mp_patch_group_members_patch_group_id'), table_name='mp_patch_group_members')
	op.drop_table('mp_patch_group_members')
	op.drop_index(op.f('ix_mp_patch_group_data_pid'), table_name='mp_patch_group_data')
	op.drop_table('mp_patch_group_data')
	op.drop_index(op.f('ix_mp_patch_group_id'), table_name='mp_patch_group')
	op.drop_index(op.f('ix_mp_patch_group_name'), table_name='mp_patch_group')
	op.drop_table('mp_patch_group')
	op.drop_index(op.f('ix_mp_os_config_profiles_assigned_profileID'), table_name='mp_os_config_profiles_assigned')
	op.drop_table('mp_os_config_profiles_assigned')
	op.drop_index(op.f('ix_mp_os_config_profiles_profileID'), table_name='mp_os_config_profiles')
	op.drop_table('mp_os_config_profiles')
	op.drop_index(op.f('ix_mp_installed_patches_cuuid'), table_name='mp_installed_patches')
	op.drop_index(op.f('ix_mp_installed_patches_patch'), table_name='mp_installed_patches')
	op.drop_index(op.f('ix_mp_installed_patches_patch_name'), table_name='mp_installed_patches')
	op.drop_index(op.f('ix_mp_installed_patches_patch_mdate'), table_name='mp_installed_patches')
	op.drop_table('mp_installed_patches')
	op.drop_index(op.f('ix_mp_group_config_group_id'), table_name='mp_group_config')
	op.drop_table('mp_group_config')
	op.drop_table('mp_clients_wait_reg')
	op.drop_table('mp_clients_reg_conf')
	op.drop_index(op.f('ix_mp_clients_ipaddr'), table_name='mp_clients')
	op.drop_index(op.f('ix_mp_clients_hostname'), table_name='mp_clients')
	op.drop_index(op.f('ix_mp_clients_cuuid'), table_name='mp_clients')
	op.drop_index(op.f('ix_mp_clients_computername'), table_name='mp_clients')
	op.drop_table('mp_clients')
	op.drop_index(op.f('ix_mp_client_tasks_group_id'), table_name='mp_client_tasks')
	op.drop_table('mp_client_tasks')
	op.drop_index(op.f('ix_mp_client_settings_key'), table_name='mp_client_settings')
	op.drop_index(op.f('ix_mp_client_settings_group_id'), table_name='mp_client_settings')
	op.drop_table('mp_client_settings')
	op.drop_index(op.f('ix_mp_client_reg_keys_cuuid'), table_name='mp_client_reg_keys')
	op.drop_table('mp_client_reg_keys')
	op.drop_index(op.f('ix_mp_client_groups_group_owner'), table_name='mp_client_groups')
	op.drop_index(op.f('ix_mp_client_groups_group_name'), table_name='mp_client_groups')
	op.drop_index(op.f('ix_mp_client_groups_group_id'), table_name='mp_client_groups')
	op.drop_table('mp_client_groups')
	op.drop_index(op.f('ix_mp_client_group_members_group_id'), table_name='mp_client_group_members')
	op.drop_index(op.f('ix_mp_client_group_members_cuuid'), table_name='mp_client_group_members')
	op.drop_table('mp_client_group_members')
	op.drop_index(op.f('ix_mp_client_group_admin_group_id'), table_name='mp_client_group_admin')
	op.drop_index(op.f('ix_mp_client_group_admin_group_admin'), table_name='mp_client_group_admin')
	op.drop_table('mp_client_group_admin')
	op.drop_table('mp_client_agents_filters')
	op.drop_index(op.f('ix_mp_client_agents_puuid'), table_name='mp_client_agents')
	op.drop_table('mp_client_agents')
	op.drop_table('mp_asus_catalogs')
	op.drop_table('mp_asus_catalog_list')
	op.drop_index(op.f('ix_mp_apple_patch_criteria_puuid'), table_name='mp_apple_patch_criteria')
	op.drop_index(op.f('ix_mp_apple_patch_criteria_supatchname'), table_name='mp_apple_patch_criteria')
	op.drop_table('mp_apple_patch_criteria')
	op.drop_index(op.f('ix_mp_agent_registration_cuuid'), table_name='mp_agent_registration')
	op.drop_table('mp_agent_registration')
	op.drop_table('mp_agent_plugins')
	op.drop_index(op.f('ix_mp_agent_config_data_aid'), table_name='mp_agent_config_data')
	op.drop_table('mp_agent_config_data')
	op.drop_index(op.f('ix_mp_agent_config_aid'), table_name='mp_agent_config')
	op.drop_table('mp_agent_config')
	op.drop_index(op.f('ix_mp_adm_users_info_user_id'), table_name='mp_adm_users_info')
	op.drop_table('mp_adm_users_info')
	op.drop_index(op.f('ix_mp_adm_users_user_id'), table_name='mp_adm_users')
	op.drop_table('mp_adm_users')
	op.drop_index(op.f('ix_mp_adm_groups_group_id'), table_name='mp_adm_groups')
	op.drop_table('mp_adm_groups')
	op.drop_index(op.f('ix_mp_adm_group_users_user_id'), table_name='mp_adm_group_users')
	op.drop_table('mp_adm_group_users')
	op.drop_table('mp_adhoc_reports')
	op.drop_table('av_defs')
	op.drop_index(op.f('ix_apple_patches_mp_additions_supatchname'), table_name='apple_patches_mp_additions')
	op.drop_table('apple_patches_mp_additions')
	op.drop_index(op.f('ix_apple_patches_patchname'), table_name='apple_patches')
	op.drop_index(op.f('ix_apple_patches_supatchname'), table_name='apple_patches')
	op.drop_index(op.f('ix_apple_patches_akey'), table_name='apple_patches')
	op.drop_table('apple_patches')
	### end Alembic commands ###

	### Drop MacPatch VIEWS ###
	op.execute("DROP VIEW IF EXISTS `mp_clients_view`;")
	op.execute("DROP VIEW IF EXISTS `mp_client_patches_apple_view`;")
	op.execute("DROP VIEW IF EXISTS `mp_client_patches_third_view`;")
	op.execute("DROP VIEW IF EXISTS `mp_client_patches_full_view`;")
	op.execute("DROP VIEW IF EXISTS `mp_client_patch_status_view`;")
	op.execute("DROP VIEW IF EXISTS `combined_patches_view`;")
	op.execute("DROP VIEW IF EXISTS `client_patch_status_view`;")
